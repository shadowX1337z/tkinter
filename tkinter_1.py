import tkinter as tk
from tkinter import messagebox
import random

# C√†i ƒë·∫∑t bi·∫øn to√†n c·ª•c
MAX_PRESSES = 10  # S·ªë l·∫ßn nh·∫•n n√∫t c·∫ßn thi·∫øt
MAX_REPEATS = 2   # S·ªë l·∫ßn l·∫∑p l·∫°i c·ª≠a s·ªï l·ªói (T·ªïng c·ªông 3 c·ª≠a s·ªï)
global current_press_count
global current_repeat_count

current_press_count = 0
current_repeat_count = 0

def shake_window(window):
    """T·∫°o hi·ªáu ·ª©ng rung nh·∫π c·ª≠a s·ªï ƒë·ªÉ m√¥ ph·ªèng s·ª± c·ªë h·ªá th·ªëng."""
    # Rung c·ª≠a s·ªï 3 l·∫ßn v·ªõi bi√™n ƒë·ªô nh·ªè
    for _ in range(3):
        for x_offset in [-3, 3]:
            window.geometry(f"+{window.winfo_x() + x_offset}+{window.winfo_y()}")
            window.update()
            window.after(30)
        window.geometry(f"+{window.winfo_x() - 3}+{window.winfo_y()}")
        window.update()

def handle_close_attempt():
    """X·ª≠ l√Ω s·ª± ki·ªán khi n√∫t X√ÅC NH·∫¨N ƒë∆∞·ª£c nh·∫•n."""
    global current_press_count, current_repeat_count, root, status_label, close_button
    
    current_press_count += 1
    shake_window(root) # Rung nh·∫π m·ªói khi nh·∫•n
    
    if current_press_count < MAX_PRESSES:
        # ·∫®N S·ªê L·∫¶N C√íN L·∫†I: Ch·ªâ hi·ªÉn th·ªã th√¥ng b√°o l·ªói chung chung
        status_label.config(text="L·ªói Ghi log s·ª± c·ªë. Vui l√≤ng TI·∫æP T·ª§C nh·∫•n ƒë·ªÉ ƒë·∫£m b·∫£o qu√° tr√¨nh x√°c nh·∫≠n.", fg="#FF4500")
        
        # Th√™m hi·ªáu ·ª©ng thay ƒë·ªïi m√†u n√∫t nh·∫π
        button_colors = ["#DC143C", "#B22222", "#8B0000"]
        close_button.config(bg=random.choice(button_colors))
        
    else:
        # ƒê√£ nh·∫•n ƒë·ªß s·ªë l·∫ßn
        root.destroy()
        
        # Ki·ªÉm tra xem c√≥ c·∫ßn l·∫∑p l·∫°i th√¥ng b√°o kh√¥ng
        if current_repeat_count < MAX_REPEATS:
            current_repeat_count += 1
            # Hi·ªÉn th·ªã c·ª≠a s·ªï l·∫∑p l·∫°i sau 500ms
            tk.Tk().after(500, create_critical_alert_window) 
        else:
            # Ho√†n th√†nh 3 l·∫ßn c·ª≠a s·ªï
            messagebox.showinfo("Kh·∫Øc ph·ª•c S·ª± c·ªë", "‚úÖ H·ªá th·ªëng ƒë√£ c√¥ l·∫≠p Malware. Qu√° tr√¨nh g·ª≠i b√°o c√°o v·ªÅ SOC (Security Operations Center) ƒë√£ ho√†n t·∫•t.")


def create_critical_alert_window():
    """T·∫°o v√† hi·ªÉn th·ªã c·ª≠a s·ªï c·∫£nh b√°o chuy√™n nghi·ªáp."""
    global root, status_label, close_button, current_press_count
    
    # 1. Thi·∫øt l·∫≠p c·ª≠a s·ªï ch√≠nh
    root = tk.Tk()
    root.title("‚ö†Ô∏è L·ªñI H·ªÜ TH·ªêNG TR·ªåNG Y·∫æU: C·∫¢NH B√ÅO B·∫¢O M·∫¨T ‚ö†Ô∏è") 
    root.geometry("650x280")
    root.eval('tk::PlaceWindow . center')
    root.attributes('-topmost', True) # Gi·ªØ c·ª≠a s·ªï tr√™n c√πng
    root.protocol("WM_DELETE_WINDOW", lambda: shake_window(root)) # NgƒÉn ƒë√≥ng b·∫±ng n√∫t X

    # Reset s·ªë l·∫ßn nh·∫•n cho c·ª≠a s·ªï m·ªõi
    current_press_count = 0 

    # 2. N·ªôi dung th√¥ng b√°o
    error_title = tk.Label(root, 
                           text="üõë PH√ÅT HI·ªÜN K·∫æT N·ªêI V·ªöI C2 SERVER (Command & Control) üõë", 
                           fg="white", 
                           bg="#8B0000", 
                           font=("Consolas", 16, "bold"),
                           padx=15, pady=10)
    error_title.pack(pady=(20, 10), fill='x')

    # N·ªôi dung chi ti·∫øt l·ªói v·ªõi thu·∫≠t ng·ªØ chuy√™n nghi·ªáp
    error_message = tk.Label(root, 
                             text="M·ªôt Malware ƒë√£ thi·∫øt l·∫≠p k·∫øt n·ªëi ra ngo√†i (Outbound Connection) ƒë·∫øn m·ªôt C2 Server.\n"
                                  "Tr·∫°ng th√°i l√¢y nhi·ªÖm: **PERSISTENCE ESTABLISHED**.\n"
                                  "L·ªó h·ªïng khai th√°c: **CVE-2023-40477**.\n"
                                  "Vui l√≤ng nh·∫•n n√∫t X√ÅC NH·∫¨N ƒë·ªÉ k√≠ch ho·∫°t giao th·ª©c c√¥ l·∫≠p (Isolation Protocol).", 
                             font=("Consolas", 11),
                             justify=tk.LEFT)
    error_message.pack(pady=10, padx=20)

    # 3. Label tr·∫°ng th√°i nh·∫•n (Kh√¥ng hi·ªÉn th·ªã s·ªë l·∫ßn c√≤n l·∫°i)
    status_label = tk.Label(root, 
                            text="M√É L·ªñI: CRITICAL_SEC_VIOLATION_0x9C0001 (Y√™u c·∫ßu x√°c nh·∫≠n th·ªß c√¥ng!)", 
                            fg="#FF4500", 
                            font=("Consolas", 10, "bold italic"))
    status_label.pack(pady=5)

    # 4. N√∫t X√ÅC NH·∫¨N
    close_button = tk.Button(root, 
                             text="X√ÅC NH·∫¨N V√Ä K√çCH HO·∫†T ISOLATION PROTOCOL", 
                             command=handle_close_attempt,
                             bg="#DC143C", 
                             fg="white", 
                             font=("Consolas", 13, "bold"),
                             padx=20,
                             pady=10,
                             relief=tk.RAISED) 
    close_button.pack(pady=20)
    
    root.mainloop()

# B·∫Øt ƒë·∫ßu ch∆∞∆°ng tr√¨nh
if __name__ == "__main__":
    create_critical_alert_window()